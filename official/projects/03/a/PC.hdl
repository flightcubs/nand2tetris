// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // First, let's determine the input signal to the DFF

    // Calculate the increment of the previous output
    Inc16(in=previousout, out=incval);
    // Use the incremented value if inc is 1, else use the unaltered value
    Mux16(a=previousout, b=incval, sel=inc, out=counterval);
    // Determine if load, then set the signal to the input
    Mux16(a=counterval, b=in, sel=load, out=newval);
    // Finally, set the input to 0 if reset is 1
    Mux16(a=newval, b[0..15]=false, sel=reset, out=input);

    // Now, use a 16 bit register and load the input value each cycle
    Register(in=input, load=true, out=out, out=previousout);
}
