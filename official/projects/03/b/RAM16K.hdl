// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // This RAM of 16384 will be constructed from 4 x RAM4K (4096)
    // First, let's split the load signal to each of the 4 RAM chips
    // The two MSB of the address points out which RAM
    DMux4Way(in=load, sel=address[12..13], a=l1, b=l2, c=l3, d=l4);
    // Let's register each RAM512 with the input signal, its load and
    // the address specifying the sub-address from the twelve LSB
    RAM4K(in=in, load=l1, address=address[0..11], out=out1);
    RAM4K(in=in, load=l2, address=address[0..11], out=out2);
    RAM4K(in=in, load=l3, address=address[0..11], out=out3);
    RAM4K(in=in, load=l4, address=address[0..11], out=out4);
    // Now, let's determine the output for this chip
    // by selecting the output from the right RAM
    Mux4Way16(a=out1, b=out2, c=out3, d=out4, sel=address[12..13], out=out);
}
