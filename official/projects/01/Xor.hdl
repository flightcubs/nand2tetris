// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Xor.hdl

/**
 * Exclusive-or gate:
 * out = not (a == b)
 */

CHIP Xor {
    IN a, b;
    OUT out;

    PARTS:
    // First implementation:

    // First reverse both inputs
    // Not(in=a, out=nota);
    // Not(in=b, out=notb);
    // Check if a is 1 and b is 0
    // And(a=a, b=notb, out=anotb);
    // Check if b is 1 and a is 0
    // And(a=nota, b=b, out=bnota);
    // Check if either of above was true
    // Or(a=anotb, b=bnota, out=out);

    // More efficient implementation:

    // Check if both are not 1
    Nand(a=a, b=b, out=bothnot1);
    // Check if both are not 0
    Or(a=a, b=b, out=bothnot0);
    // If both of above is true, then they are different
    And(a=bothnot1, b=bothnot0, out=out);
}
